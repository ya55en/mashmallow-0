#! /bin/sh


__version__='0.0.5'

# [ -n "$MASH_HOME" ] || die 1 "mash NOT configured - MASH_HOME not set (E1211)"
_MASH_HOME="${MASH_HOME:-$(dirname "$(dirname "$0")")}"

# Params:

# Dev variables

# Use DEBUG=true to enable debug level messaging. Default is 'false'.
DEBUG=${DEBUG:-false}

# TODO: Decide if we need include* and move (or remove) these.

# alias include='. $MASH_HOME/'
# alias include_recipe='. $MASH_HOME/share/recipes'

# TODO: move (or remove) include*()

# include() {
#     lib_script="$1"
#     # shellcheck disable=SC1090
#     . "${_LIB_DIR}/${lib_script}"
# }

# include_recipe() {
#     verb_n_script="$1"
#     # shellcheck disable=SC1090
#     . "${_RECIPES_DIR}/${verb_n_script}"
# }

# include libma.sh


[ x$DEBUG = xtrue ] && echo "DEBUG: _MASH_HOME=[$_MASH_HOME]"

if [ x"${1}" = x-v ] || [ x"${1}" = x--version ] ; then
    echo "ma'shmallow v${__version__}"
    exit 0
fi

if [ x"${1}" = x-h ] || [ x"${1}" = x--help ] ; then
    echo "ma'shmallow v${__version__}: help not (yet) available, apologies... :\\"
    exit 1
fi


# shellcheck disable=SC1090
{
    . "${_MASH_HOME}/etc/mashrc"
    . "${_LIB_DIR}/libma.sh"
}

mash_action='doit'  # one of 'doit', 'undo'
if [ x"${1}" = xundo ]; then
    mash_action='undo'
    shift
fi

verb="${1}"
recipe="${2}"

script_dir="${_RECIPES_DIR}/${verb}"
script_full_path="${script_dir}/${recipe}.sh"

log debug "mash_action=${mash_action}"
log debug "script_dir=${script_dir}"
log debug "script_full_path=${script_full_path}"

[ -e "${script_dir}" ] || die 2 "Unknown verb '${verb}'"
[ -f "${script_full_path}" ] || die 2 "Unknown recipe '${recipe}'"

# shellcheck disable=SC1090
. "${script_full_path}"

# include_recipe "${verb}/${script}"
